import java.util.ArrayList;
import java.util.Scanner;

class Employee {
    int id;
    String name;
    double salary;

    Employee(int id, String name, double salary) {
        this.id = id;
        this.name = name;
        this.salary = salary;
    }

    public String toString() {
        return "ID: " + id + ", Name: " + name + ", Salary: " + salary;
    }
}

public class EmployeeManagement {
    static ArrayList<Employee> employees = new ArrayList<>();
    static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.println("\n1.Add  2.Update  3.Remove  4.Search  5.Display  6.Exit");
            switch (scanner.nextInt()) {
                case 1 -> addEmployee();
                case 2 -> updateEmployee();
                case 3 -> removeEmployee();
                case 4 -> searchEmployee();
                case 5 -> displayEmployees();
                case 6 -> { System.out.println("Exiting..."); return; }
                default -> System.out.println("Invalid choice!");
            }
        }
    }

    static void addEmployee() {
        System.out.print("Enter ID, Name, Salary: ");
        employees.add(new Employee(scanner.nextInt(), scanner.next(), scanner.nextDouble()));
        System.out.println("Added Successfully!");
    }

    static void updateEmployee() {
        System.out.print("Enter ID to update: ");
        int id = scanner.nextInt();
        for (Employee e : employees) {
            if (e.id == id) {
                System.out.print("Enter new Name and Salary: ");
                e.name = scanner.next();
                e.salary = scanner.nextDouble();
                System.out.println("Updated Successfully!");
                return;
            }
        }
        System.out.println("Employee not found!");
    }

    static void removeEmployee() {
        System.out.print("Enter ID to remove: ");
        employees.removeIf(e -> e.id == scanner.nextInt());
        System.out.println("Removed Successfully!");
    }

    static void searchEmployee() {
        System.out.print("Enter ID to search: ");
        employees.stream().filter(e -> e.id == scanner.nextInt()).findFirst()
                .ifPresentOrElse(System.out::println, () -> System.out.println("Not found!"));
    }

    static void displayEmployees() {
        if (employees.isEmpty()) System.out.println("No employees found!");
        else employees.forEach(System.out::println);
    }
}
